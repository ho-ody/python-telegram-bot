pipeline {
    agent any

    environment {
        VERSION = sh(returnStdout: true, script: 'echo ${BUILD_NUMBER}').trim()
        DOCKER_HUB_USER = credentials('docker-hub-username')
        DOCKER_HUB_PASSWORD = credentials('docker-hub-password')
    }

    stages {
        stage('Build') {
            steps {
                echo 'building...'
                sh 'DOCKER_TLS_VERIFY=0 docker compose -f devops/docker-compose.yml build python-telegram-bot'
            }
            post {
                always{
                    echo '   done'
                }
                success {
                    echo '   success'
                }
                failure {
                    echo '   failure'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'testing...'
                sh 'DOCKER_TLS_VERIFY=0 docker compose -f devops/docker-compose.yml build python-telegram-bot-tests'
            }
            post {
                always{
                    echo '   done'
                }
                success {
                    echo '   success'
                }
                failure {
                    echo '   failure'
                }
            }
        }
        stage('Deploy') {
            steps {
                echo 'deploying...'
                sh "DOCKER_TLS_VERIFY=0 docker compose -f devops/docker-compose.yml build --no-cache python-telegram-bot"
                sh "DOCKER_TLS_VERIFY=0 docker tag python-telegram-bot python-telegram-bot:${VERSION}"
                sh "echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USER --password-stdin"
                sh "DOCKER_TLS_VERIFY=0 docker push $DOCKER_HUB_USER/python-telegram-bot:${VERSION}"
                sh "DOCKER_TLS_VERIFY=0 docker compose -f devops/docker-compose.yml up -d python-telegram-bot"
            }
            post {
                always{
                    echo '   done'
                }
                success {
                    echo '   success'
                }
                failure {
                    echo '   failure'
                }
            }
        }
    }
}
